---
language: python
python: "2.7"
sudo: required

env:
  - distribution: ubuntu
    version: bionic
  - distribution: ubuntu
    version: xenial
  - distribution: debian
    version: stretch
  - distribution: debian
    version: jessie
  - distribution: centos
    version: 7

services:
  - docker

before_install:
  # Make sure everything's up to date.
  - 'sudo apt-get update -qq'
  - 'sudo docker pull ${distribution}:${version}'
  - 'sudo docker build --no-cache --rm --file=travis/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible travis'

install:
  # Install Ansible.
  - pip install ansible

script:
  - "ansible-galaxy install mjcramer.system" 
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/system:ro ${distribution}-${version}:ansible > "${container_id}"'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/system/tests/test.yml --syntax-check'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/system/tests/test.yml'
  - >
    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/system/tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence: PASS' && exit 0)
    || (echo 'Idempotence: FAIL' && exit 1)
  - 'sudo docker rm -f "$(cat ${container_id})"'

notifications:
    webhooks: https://galaxy.ansible.com/api/v1/notifications/

